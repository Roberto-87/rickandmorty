{"ast":null,"code":"const {\n  ADD_FAVORITE,\n  DELETE_FAVORITE,\n  FILTER,\n  ORDER\n} = require(\"./types\");\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ADD_FAVORITE:\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters, payload],\n        allCharacters: [...state.allCharacters, payload] //me hago una copia de ese estado porque voy a estar filtrando los favoritos y no quiero pisar el estado original sino tener un respaldo el cual poder recuperar => necesitamos dos estados que manejen lo mismo, uno lo vamos a usar para hacer el filtrado sin pisar el original\n      };\n\n    case DELETE_FAVORITE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(\n        // es mejor hacerlo en una variable aparte antes del return\n        favorite => favorite.id !== payload)\n      };\n    case FILTER:\n      const filterGender = state.allCharacters.filter(ch => {\n        return ch.gender === payload;\n      });\n      return {\n        ...state,\n        myFavorites: filterGender\n      };\n    case ORDER:\n      return {\n        ...state,\n        myFavorites: payload === \"Ascendente\" ? state.allCharacters.sort((a, b) => a.id - b.id) : state.allCharacters.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ADD_FAVORITE","DELETE_FAVORITE","FILTER","ORDER","require","initialState","myFavorites","allCharacters","reducer","state","type","payload","filter","favorite","id","filterGender","ch","gender","sort","a","b"],"sources":["C:/Users/Lenovo/Desktop/Files/soyHenry/M2/rick_and_morty/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["const { ADD_FAVORITE, DELETE_FAVORITE, FILTER, ORDER } = require(\"./types\");\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  allCharacters: [],\r\n};\r\n\r\nexport const reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_FAVORITE:\r\n      return {\r\n        ...state,\r\n        myFavorites: [...state.allCharacters, payload],\r\n        allCharacters: [...state.allCharacters, payload], //me hago una copia de ese estado porque voy a estar filtrando los favoritos y no quiero pisar el estado original sino tener un respaldo el cual poder recuperar => necesitamos dos estados que manejen lo mismo, uno lo vamos a usar para hacer el filtrado sin pisar el original\r\n      };\r\n    case DELETE_FAVORITE:\r\n      return {\r\n        ...state,\r\n        myFavorites: state.myFavorites.filter(\r\n          // es mejor hacerlo en una variable aparte antes del return\r\n          (favorite) => favorite.id !== payload\r\n        ),\r\n      };\r\n    case FILTER:\r\n      const filterGender = state.allCharacters.filter((ch) => {\r\n        return ch.gender === payload;\r\n      });\r\n      return {\r\n        ...state,\r\n        myFavorites: filterGender,\r\n      };\r\n    case ORDER:\r\n      return {\r\n        ...state,\r\n        myFavorites:\r\n          payload === \"Ascendente\"\r\n            ? state.allCharacters.sort((a, b) => a.id - b.id)\r\n            : state.allCharacters.sort((a, b) => b.id - a.id),\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAM;EAAEA,YAAY;EAAEC,eAAe;EAAEC,MAAM;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE3E,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,YAA6C;EAAA,IAA5CC,KAAK,uEAAGJ,YAAY;EAAA,IAAE;IAAEK,IAAI;IAAEC;EAAQ,CAAC;EAC7D,QAAQD,IAAI;IACV,KAAKV,YAAY;MACf,OAAO;QACL,GAAGS,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa,EAAEI,OAAO,CAAC;QAC9CJ,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEI,OAAO,CAAC,CAAE;MACpD,CAAC;;IACH,KAAKV,eAAe;MAClB,OAAO;QACL,GAAGQ,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACM,MAAM;QACnC;QACCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKH,OAAO;MAEzC,CAAC;IACH,KAAKT,MAAM;MACT,MAAMa,YAAY,GAAGN,KAAK,CAACF,aAAa,CAACK,MAAM,CAAEI,EAAE,IAAK;QACtD,OAAOA,EAAE,CAACC,MAAM,KAAKN,OAAO;MAC9B,CAAC,CAAC;MACF,OAAO;QACL,GAAGF,KAAK;QACRH,WAAW,EAAES;MACf,CAAC;IACH,KAAKZ,KAAK;MACR,OAAO;QACL,GAAGM,KAAK;QACRH,WAAW,EACTK,OAAO,KAAK,YAAY,GACpBF,KAAK,CAACF,aAAa,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,CAAC,GAC/CL,KAAK,CAACF,aAAa,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE;MACtD,CAAC;IACH;MACE,OAAO;QACL,GAAGL;MACL,CAAC;EAAC;AAER,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}