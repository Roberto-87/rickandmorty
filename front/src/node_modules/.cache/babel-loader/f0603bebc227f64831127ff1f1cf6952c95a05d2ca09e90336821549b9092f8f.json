{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Files\\\\soyHenry\\\\M2\\\\rick_and_morty\\\\rick_and_morty\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/cards/Cards.jsx\";\nimport Nav from \"./components/nav/Nav\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { About } from \"./components/about/About.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      element: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n\n  //las props van siempre desde los padres a los hijos, en cambio, los eventos van desde los hijos a los padres. En searchBar puedo tener un evento cuya función esté en app\n  const onSearch = character => {\n    fetch(`https://rickandmortyapi.com/api/character/${character}`).then(response => response.json()).then(data => {\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert(\"No hay personajes con ese ID\");\n      }\n    });\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(character => character.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"25px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        characters: characters,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Cards","Nav","Route","Routes","About","App","characters","setCharacters","onSearch","character","fetch","then","response","json","data","name","oldChars","window","alert","onClose","id","filter","padding"],"sources":["C:/Users/Lenovo/Desktop/Files/soyHenry/M2/rick_and_morty/rick_and_morty/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Cards from \"./components/cards/Cards.jsx\";\r\nimport Nav from \"./components/nav/Nav\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { About } from \"./components/about/About.jsx\";\r\n\r\nfunction App() {\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  <Routes>\r\n    <Route path=\"/home\" element={<Cards />} />\r\n  </Routes>;\r\n\r\n  //las props van siempre desde los padres a los hijos, en cambio, los eventos van desde los hijos a los padres. En searchBar puedo tener un evento cuya función esté en app\r\n  const onSearch = (character) => {\r\n    fetch(`https://rickandmortyapi.com/api/character/${character}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.name) {\r\n          setCharacters((oldChars) => [...oldChars, data]);\r\n        } else {\r\n          window.alert(\"No hay personajes con ese ID\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onClose = (id) => {\r\n    setCharacters(characters.filter((character) => character.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"25px\" }}>\r\n      <div>\r\n        <Nav onSearch={onSearch} />\r\n      </div>\r\n      <div>\r\n        <Cards characters={characters} onClose={onClose} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,KAAK,QAAQ,8BAA8B;AAAC;AAErD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,qBAAC,MAAM;IAAA,uBACL,QAAC,KAAK;MAAC,IAAI,EAAC,OAAO;MAAC,OAAO,eAAE,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACnC;;EAET;EACA,MAAMS,QAAQ,GAAIC,SAAS,IAAK;IAC9BC,KAAK,CAAE,6CAA4CD,SAAU,EAAC,CAAC,CAC5DE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,IAAI,EAAE;QACbR,aAAa,CAAES,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MAClD,CAAC,MAAM;QACLG,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC9C;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,OAAO,GAAIC,EAAE,IAAK;IACtBb,aAAa,CAACD,UAAU,CAACe,MAAM,CAAEZ,SAAS,IAAKA,SAAS,CAACW,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtE,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAC,KAAK,EAAE;MAAEE,OAAO,EAAE;IAAO,CAAE;IAAA,wBAC9C;MAAA,uBACE,QAAC,GAAG;QAAC,QAAQ,EAAEd;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvB,eACN;MAAA,uBACE,QAAC,KAAK;QAAC,UAAU,EAAEF,UAAW;QAAC,OAAO,EAAEa;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAlCQd,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}