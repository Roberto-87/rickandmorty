{"ast":null,"code":"const validation = userData => {\n  let errors = {};\n  if (!/\\S+@\\S+\\.\\S+/.test(userData.username)) {\n    errors[\"username\"] = \"el usuario tiene que ser un email\";\n    console.log(\"el usuario tiene que ser un email\");\n  }\n  if (!userData.username) {\n    errors[\"username\"] = \"este campo no puede estar vacío\";\n  }\n  if (userData.userName.length > 35) {\n    //userName\n    errors[\"username\"] = \"el nombre de usuario no puede superar los 35 caracteres\";\n  }\n  if (!userData.password) {\n    //userName\n    errors[\"password\"] = \"el nombre de usuario no puede estar vacío\";\n  }\n  if (!/\\d+/.test(userData.password)) {\n    errors[\"password\"] = \"la contraseña tiene que tener al menos un número.\";\n  }\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    errors[\"password\"] = \"la contraseña tiene que tener una longitud entre 6 y 10 caracteres\";\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","test","username","console","log","userName","length","password"],"sources":["C:/Users/Lenovo/Desktop/Files/soyHenry/M2/rick_and_morty/rick_and_morty/src/components/form_/validation.js"],"sourcesContent":["const validation = (userData) => {\r\n  let errors = {};\r\n\r\n  if (!/\\S+@\\S+\\.\\S+/.test(userData.username)) {\r\n    errors[\"username\"] = \"el usuario tiene que ser un email\";\r\n    console.log(\"el usuario tiene que ser un email\");\r\n  }\r\n  if (!userData.username) {\r\n    errors[\"username\"] = \"este campo no puede estar vacío\";\r\n  }\r\n  if (userData.userName.length > 35) {\r\n    //userName\r\n    errors[\"username\"] =\r\n      \"el nombre de usuario no puede superar los 35 caracteres\";\r\n  }\r\n\r\n  if (!userData.password) {\r\n    //userName\r\n    errors[\"password\"] = \"el nombre de usuario no puede estar vacío\";\r\n  }\r\n  if (!/\\d+/.test(userData.password)) {\r\n    errors[\"password\"] = \"la contraseña tiene que tener al menos un número.\";\r\n  }\r\n  if (userData.password.length < 6 || userData.password.length > 10) {\r\n    errors[\"password\"] =\r\n      \"la contraseña tiene que tener una longitud entre 6 y 10 caracteres\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validation;\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,QAAQ,IAAK;EAC/B,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAI,CAAC,cAAc,CAACC,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAE;IAC3CF,MAAM,CAAC,UAAU,CAAC,GAAG,mCAAmC;IACxDG,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD;EACA,IAAI,CAACL,QAAQ,CAACG,QAAQ,EAAE;IACtBF,MAAM,CAAC,UAAU,CAAC,GAAG,iCAAiC;EACxD;EACA,IAAID,QAAQ,CAACM,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACjC;IACAN,MAAM,CAAC,UAAU,CAAC,GAChB,yDAAyD;EAC7D;EAEA,IAAI,CAACD,QAAQ,CAACQ,QAAQ,EAAE;IACtB;IACAP,MAAM,CAAC,UAAU,CAAC,GAAG,2CAA2C;EAClE;EACA,IAAI,CAAC,KAAK,CAACC,IAAI,CAACF,QAAQ,CAACQ,QAAQ,CAAC,EAAE;IAClCP,MAAM,CAAC,UAAU,CAAC,GAAG,mDAAmD;EAC1E;EACA,IAAID,QAAQ,CAACQ,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIP,QAAQ,CAACQ,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IACjEN,MAAM,CAAC,UAAU,CAAC,GAChB,oEAAoE;EACxE;EACA,OAAOA,MAAM;AACf,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}